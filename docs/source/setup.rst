Setup
***********
Below, we describe how to setup FOBOS hardware and software and test that everything is working.

Requirements
============
1. Digilent Basys3 board
2. A PC with Linux installed
3. Python2 installed
4. Xilinx Vivado 2017.2

Software Installation
=====================

Note: The following installation procedure is tested on Linux Ubuntu 16.04.

1. Download FOBOS from the `FOBOS home page <https://cryptography.gmu.edu/fobos/getfobos.php>`_.
2. Extract the archive into the directory of your choice

.. code-block:: bash

    $ tar xvfz fobos-v2.0.tgz

3. Use the following commands to install the necessary Python packages:

.. code-block:: bash

    $ sudo apt-get install python-pip
    $ sudo pip install numpy
    $ sudo pip install pyserial
    $ sudo pip install matplotlib
    $ sudo pip install scipy
    $ sudo pip install configparser

Hardware Setup
==============

Follow these steps to compile the control software, generate the bitstream and program 
the configuration memory of the control board.

1. Build the control board Vivado project.

.. code-block:: bash

    $ cd fobos/capture/ctrl/basys3ctrl/vivado
    $ make project

2. A Vivado project will be created at fobos/capture/ctrl/basys3ctrl/vivado/basys3ctrl. Open it using Vivado.

.. figure::  figures/open_project.png
   :align:   center

   Open Vivado project

3. In the Flow Navigator window, click 'Generate Bitstream'.
4. After bitstream is generated, export the hardware. Click File > Export > Export Hardware ... make sure to select 'Include bitstream'.

.. figure::  figures/export_hardware.png
   :align:   center

   Export Hardware

5. Launch the Xilinx SDK (File > Launch SDK).

.. figure::  figures/launch_sdk.png
   :align:   center

   Launch SDK

6. In the SDK, create a new empty project(File> New application project). After you right the project name and select
the hardware platform, click Next and make sure you select 'Empty project'.

.. figure::  figures/create_sdk_app.png
   :align:   center

   Create Project

7. Link all the .c and .h files in the fobos/capture/ctrl/basys3ctrl/sdk/src/ to the project 
   (right-click on project/src folder -> Import -> General-> file system -> browse to folder). 
   make sure to check "Advanced-> Create links in the workspace" and "Create virtual folders" .

.. figure::  figures/import_sdk_src.png
   :align:   center

   Launch SDK

8. Right-click on the project you just created and select Build Configurations > Set Active > Release. Then right-click again and select Build Project.

9. Make sure that there are no debug flags. Right-click the release folder under the project and select Properties. In the window that appears
select C/C++ Build > Settings > Microblaze gcc Compiler > Debugging and set Debug Level to 'None'.


.. figure::  figures/release_settings.png
   :align:   center

   Remove Debugging

Now the SDK generates an elf file for the controller software in fobos/capture/ctrl/basys3ctrl/vivado/basys3ctrl/basys3ctrl.sdk/ctrl/Release/.

10. Go back to Vivado > IP Integrator > Open Block Design.

11. Right-click on the Microblaze processor and select 'Associate ELF Files...'. Browse to the ctrl.elf file generated by the SDK.

.. figure::  figures/release_settings.png
   :align:   center

   Associate ELF File

12. Click Generate Bitstream.

13. After the bitstream is generated, click Open Hardware Manager > Open Target > Auto Connect.

14. Add the configuration memory device. In the Hardware window, right-click on the FPGA device and select 'Add Configuration Memory Device ...'.
In the search area enter s25fl032p-spi-x1_x2_x4 and select the Spansion spi memory.

14. Under the Hardware window, right-click on the memory device and select 'Program Configuration Memory Device'

.. figure::  figures/program_mem.png
   :align:   center

   Configuration Memory

15. In the window that appears, browse to the .bin file PATH and select Erase, Program and Verify.

.. figure::  figures/basys3_program_flash.png
   :align:   center

   Program Configuration Memory

16. Now, power cycle your Basys3 board and your controller is ready to use!

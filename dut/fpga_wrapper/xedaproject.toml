[[design]]
name = "TinyJAMBU-DOM1-v1"


rtl.sources = [
    # LWC:
    "cc/src_rtl/hpc3_and.vhd",
    "cc/src_rtl/design_pkg.vhd",
    "cc/src_rtl/LWC_config.vhd",
    "cc/src_rtl/LWC/NIST_LWAPI_pkg.vhd",
    "cc/src_rtl/tinyjambu_dp_ops.vhd",
    "cc/src_rtl/reg_n.vhd",
    "cc/src_rtl/dom_mul_reg.vhd",
    "cc/src_rtl/dom_mul.vhd",
    "cc/src_rtl/dom_mul_dep.vhd",
    "cc/src_rtl/hpc3_mul.vhd",
    "cc/src_rtl/dom_nlfsr_reg_feed.vhd",
    "cc/src_rtl/dom_nlfsr.vhd",
    "cc/src_rtl/tinyjambu_datapath.vhd",
    "cc/src_rtl/tinyjambu_control.vhd",
    "cc/src_rtl/tag_verif.vhd",
    "cc/src_rtl/CryptoCore_SCA.vhd",
    "cc/src_rtl/LWC/PISO.vhd",
    "cc/src_rtl/LWC/SIPO.vhd",
    "cc/src_rtl/LWC/FIFO.vhd",
    "cc/src_rtl/LWC/PreProcessor.vhd",
    "cc/src_rtl/LWC/PostProcessor.vhd",
    "cc/src_rtl/LWC/LWC_SCA.vhd",
    ## wrapper:
    "src_rtl/LFSR.vhd",
    "src_rtl/asym_fifo.vhd",
    "src_rtl/LWC_SCA_wrapper.vhd",
    "src_rtl/writestrobe_gen.vhd",
    "src_rtl/core_wrapper.vhd",
    "src_rtl/half_duplex_interface.vhd",
    "src_rtl/half_duplex_dut.vhd",
]
# includes = []
rtl.top = "half_duplex_dut"
rtl.clocks.sys_clk.port = "clk_c2d"

# clock.port = "clk"
# reset.port = "reset"
# reset.active_high = true
# reset.asynchronous = false
rtl.parameters = { W = 256, SW = 128 }

language.vhdl.version = "2008"
# vhdl.synopsys = false
# verilog.version = "2001"
# systemverilog.version = "2009"

tb.sources = [
    "src_tb/core_wrapper_tb.vhd",
    # "src_tb/LWC_TB_SCA_wrapper_conf.vhd",
]
tb.top = "core_wrapper_tb"
# top = "LWC_TB_SCA_wrapper_conf"
# includes = []

[design.tb.parameters]
# {file: "xx"} is an extension to specify a string generic/parameter pointing to a relative path:
G_CONFIG_FNAME = { file = "kat/configFile.txt" }
G_DIN_FNAME = { file = "kat/dinFile.txt" }
G_DOUT_FNAME = { file = "kat/doutFile.txt" }
# G_FNAME_SDI = { file = "KAT/TinyJAMBU-DOM1-v1/sdi_shared_2.txt" }
# G_FNAME_RDI = { file = "KAT/TinyJAMBU-DOM1-v1/rdi.txt" }
# G_FNAME_DO = { file = "KAT/TinyJAMBU-DOM1-v1/do.txt" }
# G_TEST_MODE = 0 # 1: stall inputs and outputs
# G_RANDOM_STALL = true
# G_TIMEOUT_CYCLES = 1000
# G_MAX_FAILURES = 0

[design.lwc.aead]
algorithm = "tinyjambu128"
# key_bits = 128
# npub_bits = 128
# tag_bits = 128
# input_sequence.encrypt = [ "npub", "ad", "pt", "tag" ]
# input_sequence.decrypt = [ "npub", "ad", "ct", "tag" ]

# [lwc.hash]
# algorithm = "" ###### (hashing is not supported)
# digest_bits = 128

[design.lwc.ports]
# pdi.bit_width = 32
# pdi.num_shares = 2
# rdi.bit_width = 192
# # sdi.bit_width = 32
# sdi.num_shares = 2

[design.lwc.sca_protection]
target = ["timing", "sda", "dpa"]
order = 1

[flows.vivado_synth]
fpga.part = "xc7a100tftg256-3"
xdc_files = ["constraints/cw305.xdc"]
clocks.sys_clk.port = "clk_c2d"
clocks.sys_clk.freq = 50
write_bitstream = true
qor_suggestions = true
